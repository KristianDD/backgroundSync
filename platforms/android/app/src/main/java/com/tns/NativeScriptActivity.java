/* AUTO-GENERATED FILE. DO NOT MODIFY.
 * This class was automatically generated by the
 * static binding generator from the resources it found.
 * Please do not modify by hand.
 */
package com.tns;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import androidx.core.content.ContextCompat;

import java.io.File;

@com.tns.JavaScriptImplementation(javaScriptFile = "./vendor.js")
public class NativeScriptActivity extends androidx.appcompat.app.AppCompatActivity
    implements com.tns.NativeScriptHashCodeProvider {
  public NativeScriptActivity() {
    super();
    com.tns.Runtime.initInstance(this);
  }

  protected void onPostResume() {
    java.lang.Object[] args = new java.lang.Object[0];
    com.tns.Runtime.callJSMethod(this, "onPostResume", void.class, args);
  }

  protected void onStart() {
    java.lang.Object[] args = new java.lang.Object[0];
    com.tns.Runtime.callJSMethod(this, "onStart", void.class, args);
  }

  protected void onStop() {
    java.lang.Object[] args = new java.lang.Object[0];
    com.tns.Runtime.callJSMethod(this, "onStop", void.class, args);
  }

  protected void onDestroy() {
    java.lang.Object[] args = new java.lang.Object[0];
    com.tns.Runtime.callJSMethod(this, "onDestroy", void.class, args);
  }

  protected void onSaveInstanceState(android.os.Bundle param_0) {
    java.lang.Object[] args = new java.lang.Object[1];
    args[0] = param_0;
    com.tns.Runtime.callJSMethod(this, "onSaveInstanceState", void.class, args);
  }

  protected void onActivityResult(int param_0, int param_1, android.content.Intent param_2) {
    java.lang.Object[] args = new java.lang.Object[3];
    args[0] = param_0;
    args[1] = param_1;
    args[2] = param_2;
    com.tns.Runtime.callJSMethod(this, "onActivityResult", void.class, args);
  }

  public void onBackPressed() {
    java.lang.Object[] args = new java.lang.Object[0];
    com.tns.Runtime.callJSMethod(this, "onBackPressed", void.class, args);
  }

  protected void onNewIntent(android.content.Intent param_0) {
    java.lang.Object[] args = new java.lang.Object[1];
    args[0] = param_0;
    com.tns.Runtime.callJSMethod(this, "onNewIntent", void.class, args);
  }

  public void onRequestPermissionsResult(int param_0, java.lang.String[] param_1, int[] param_2) {
    java.lang.Object[] args = new java.lang.Object[3];
    args[0] = param_0;
    args[1] = param_1;
    args[2] = param_2;
    com.tns.Runtime.callJSMethod(this, "onRequestPermissionsResult", void.class, args);
  }

  public void onCreate(android.os.Bundle param_0, android.os.PersistableBundle param_1) {
    java.lang.Object[] args = new java.lang.Object[2];
    args[0] = param_0;
    args[1] = param_1;
    com.tns.Runtime.callJSMethod(this, "onCreate", void.class, args);
  }

  public void onSaveInstanceState(android.os.Bundle param_0, android.os.PersistableBundle param_1) {
    java.lang.Object[] args = new java.lang.Object[2];
    args[0] = param_0;
    args[1] = param_1;
    com.tns.Runtime.callJSMethod(this, "onSaveInstanceState", void.class, args);
  }

  public int hashCode__super() {
    return super.hashCode();
  }

  public boolean equals__super(java.lang.Object other) {
    return super.equals(other);
  }

  Messenger mService = null;
  boolean mIsBound;
  /**
   * Handler of incoming messages from service.
   */
  class IncomingHandler extends Handler {
    @Override
    public void handleMessage(Message msg) {
      switch (msg.what) {
        case com.tns.ForegroundService.MSG_SET_VALUE:
          if(com.tns.Runtime.isInitialized()) {
            com.tns.Runtime runtime = com.tns.Runtime.getCurrentRuntime();
            runtime.runScript(new File(NativeScriptActivity.this.getApplication().getFilesDir(), "internal/livesync.js"), false);
          }
          break;
        default:
          super.handleMessage(msg);
      }
    }
  }
  /**
   * Target we publish for clients to send messages to IncomingHandler.
   */
  final Messenger mMessenger = new Messenger(new IncomingHandler());
  private ServiceConnection mConnection = new ServiceConnection() {
    public void onServiceConnected(ComponentName className,
                                   IBinder service) {
      // This is called when the connection with the service has been
      // established, giving us the service object we can use to
      // interact with the service.  We are communicating with our
      // service through an IDL interface, so get a client-side
      // representation of that from the raw service object.
      mService = new Messenger(service);
      // We want to monitor the service for as long as we are
      // connected to it.
      try {
        Message msg = Message.obtain(null,
                com.tns.ForegroundService.MSG_REGISTER_CLIENT);
        msg.replyTo = mMessenger;
        mService.send(msg);

        // Give it some value as an example.
        msg = Message.obtain(null,
                com.tns.ForegroundService.MSG_SET_VALUE, this.hashCode(), 0);
        mService.send(msg);
      } catch (RemoteException e) {
        // In this case the service has crashed before we could even
        // do anything with it; we can count on soon being
        // disconnected (and then reconnected if it can be restarted)
        // so there is no need to do anything here.
      }
    }

    public void onServiceDisconnected(ComponentName className) {
      // This is called when the connection with the service has been
      // unexpectedly disconnected -- that is, its process crashed.
      mService = null;
    }
  };

  void doBindService() {
    // Establish a connection with the service.  We use an explicit
    // class name because there is no reason to be able to let other
    // applications replace our component.
    bindService(new Intent(NativeScriptActivity.this,
            com.tns.ForegroundService.class), mConnection, Context.BIND_AUTO_CREATE);
    mIsBound = true;
  }

    protected void onCreate(android.os.Bundle param_0) {
      java.lang.Object[] args = new java.lang.Object[1];
      args[0] = param_0;
      Intent serviceIntent = new Intent(this, com.tns.ForegroundService.class);
      serviceIntent.putExtra("inputExtra", "Foreground Service Example in Android");

      ContextCompat.startForegroundService(this, serviceIntent);
      doBindService();
      com.tns.Runtime.callJSMethod(this, "onCreate", void.class, args);
    }
}
